version: '3.8'
services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    image: ${COMPOSE_PROJECT_NAME:?err}
    tty: true
    restart: unless-stopped
    container_name: ${COMPOSE_PROJECT_NAME:?err}
    working_dir: /app/
    volumes:
      - ./:/app
    networks:
      - ${COMPOSE_PROJECT_NAME:?err}_network
    ports:
      - '${HOST_PORT}:3010'
    depends_on:
      - db
      - redis

  db:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME:?err}_db
    restart: unless-stopped
    command: --max_allowed_packet=32505856
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      TZ: Asia/Dhaka
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - ${COMPOSE_PROJECT_NAME:?err}_network
    ports:
      - '${DOCKER_DB_HOST_PORT:?err}:3306'

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '${PHP_MY_ADMIN_PORT}:80'
    environment:
      PMA_VERBOSE: 'Docker MySQL,Local MySQL'
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - ${COMPOSE_PROJECT_NAME:?err}_network

  redis:
    image: redis:alpine
    restart: always
    container_name: ${COMPOSE_PROJECT_NAME:?err}_redis
    ports:
      - '${DOCKER_REDIS_PORT:?err}:6379'
    networks:
      - ${COMPOSE_PROJECT_NAME:?err}_network

networks:
  ecommerce-server_network:
    driver: bridge
volumes:
  mysql-data:
